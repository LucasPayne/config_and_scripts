# https://jonas.github.io/tig/doc/tigrc.5.html
# 
# set   variable = value
# bind  keymap key action
# color area fgcolor bgcolor [attributes]
# source path

set vertical-split = horizontal
set split-view-height = 70%
set line-graphics = utf-8
set diff-highlight = true
color diff-del-highlight black white
color diff-add-highlight black white
set focus-child = false
set send-child-enter = false
# set diff-options = 
set blame-options = --relative-date
set ignore-case = smart-case

bind generic 9 @sh -c "echo -n %(commit) | xclip -selection c"

#-Why isn't bind generic working?
#    Does it not take priority over built-in keybindings for views?
#    -Yes, this is true.
#    From source: /* Looks for a key binding first in the given map, then in the generic map, and
#                  * lastly in the default keybindings. */
bind main g none
bind main gg :move-first-line
bind main G :move-last-line
bind diff g none
bind diff gg :move-first-line
bind diff G :move-last-line
bind generic <C-f> :scroll-page-down
bind generic <C-b> :scroll-page-up
bind generic <Space> none

# Want something like
# bind main z none
# bind main zz ...Center the line.

bind main <Enter> :enter
addbind main <Enter> :view-next
bind main J :move-down
addbind main J :enter
bind main K :move-up
addbind main K :enter

bind main z none
bind main zz :scroll-cursor-center
addbind main zz :move-cursor-center
bind diff z none
bind diff zz :scroll-cursor-center
addbind diff zz :move-cursor-center

# bind diff e !>bash -c "set -m ; source ~/.bashrc ; v --tabnew %(file)"
# bind diff e !>bash -c "set -m ; source ~/.bashrc ; v --tabnew %(file)"
#

bind main b @git branchfrom %(commit)

# branchfrom diff
bind main D !>sh -c "git diff branchfrom | tig"
