'\" t
.\"     Title: tigrc
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 08/10/2013
.\"    Manual: Tig Manual
.\"    Source: Tig 1.2
.\"  Language: English
.\"
.TH "TIGRC" "5" "08/10/2013" "Tig 1\&.2" "Tig Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
tigrc \- tig configuration file
.SH "SYNOPSIS"
.sp
.nf
\fBset\fR   \fIvariable\fR \fB=\fR \fIvalue\fR
\fBbind\fR  \fIkeymap\fR \fIkey\fR \fIaction\fR
\fBcolor\fR \fIarea\fR \fIfgcolor\fR \fIbgcolor\fR \fI[attributes]\fR
\fBsource\fR \fIpath\fR
.fi
.sp
.SH "DESCRIPTION"
.sp
You can permanently set an option by putting it in the ~/\&.tigrc file\&. The file consists of a series of \fIcommands\fR\&. Each line of the file may contain only one command\&.
.sp
The hash mark (\fI#\fR) is used as a \fIcomment\fR character\&. All text after the comment character to the end of the line is ignored\&. You can use comments to annotate your initialization file\&.
.SH "GIT CONFIGURATION"
.sp
Alternatively to using ~/\&.tigrc, tig options can be set by putting them in one of the git configuration files, which are read by tig on startup\&. See \fIgit\-config(1)\fR for which files to use\&. The following example show the basic syntax to use for settings, bindings and colors\&.
.sp
.if n \{\
.RS 4
.\}
.nf
[tig] show\-rev\-graph = true
[tig "color"] cursor = yellow red bold
[tig "bind"] generic = P parent
.fi
.if n \{\
.RE
.\}
.sp
.sp
In addition to tig\-specific options, the following git options are read from the git configuration:
.PP
\fIcolor\&.*\fR
.RS 4
Colors for the various UI types\&. Can be completely disabled by setting
\fIread\-git\-colors\fR\&.
.RE
.PP
\fIcore\&.abbrev\fR
.RS 4
The width of the commit ID\&. See also
\fIid\-width\fR
option\&.
.RE
.PP
\fIcore\&.editor\fR
.RS 4
The editor command\&. Can be overridden by setting GIT_EDITOR\&.
.RE
.PP
\fIcore\&.worktree\fR
.RS 4
The path to the root of the working tree\&.
.RE
.PP
\fIgui\&.encoding\fR
.RS 4
The encoding to use for displaying of file content\&.
.RE
.PP
\fIi18n\&.commitencoding\fR
.RS 4
The encoding used for commits\&. The default is UTF\-8\&.
.RE
.SH "SET COMMAND"
.sp
A few selective variables can be configured via the set command\&. The syntax is:
.sp
.if n \{\
.RS 4
.\}
.nf
\fBset\fR variables \fB=\fR value
.fi
.if n \{\
.RE
.\}
.sp
.sp
Examples:
.sp
.if n \{\
.RS 4
.\}
.nf
set show\-author = abbreviated   # Show abbreviated author names\&.
set show\-date = relative        # Show relative commit date\&.
set show\-rev\-graph = yes        # Show revision graph?
set show\-refs = yes             # Show references?
set commit\-order = topo         # Order commits topologically
set read\-git\-colors = no        # Do not read git\*(Aqs color settings\&.
set show\-line\-numbers = no      # Show line numbers?
set line\-number\-interval = 5    # Interval between line numbers
set horizontal\-scroll = 33%     # Scroll 33% of the view width
set blame\-options = \-C \-C \-C    # Blame lines from other files
.fi
.if n \{\
.RE
.\}
.sp
.sp
Or in the git configuration files:
.sp
.if n \{\
.RS 4
.\}
.nf
[tig]
        show\-date = yes         # Show commit date?
        author\-width = 10       # Set width of the author column
        line\-graphics = no      # Disable graphics characters
        tab\-size = 8            # Number of spaces per tab
.fi
.if n \{\
.RE
.\}
.sp
.sp
The type of variables is either bool, int, string, or mixed\&.
.PP
Valid bool values
.RS 4
To set a bool variable to true use either "1", "true", or "yes"\&. Any other value will set the variable to false\&.
.RE
.PP
Valid int values
.RS 4
A non\-negative integer\&.
.RE
.PP
Valid string values
.RS 4
A string of characters\&. Optionally, use either \*(Aq or " as delimiters\&.
.RE
.PP
Valid mixed values
.RS 4
These values are composites of the above types\&. The valid values are specified in the description\&.
.RE
.SS "Variables"
.sp
The following variables can be set:
.PP
\fIauthor\-width\fR (int)
.RS 4
Width of the author column\&. When set to 5 or below, the author name will be abbreviated to the author\(cqs initials\&.
.RE
.PP
\fIfilename\-width\fR (int)
.RS 4
Width of the filename column\&.
.RE
.PP
\fIid\-width\fR (int)
.RS 4
Width of the commit ID\&. When unset tig will use the value of
\fIcore\&.abbrev\fR
if found or default to 7\&. See git\-config(1) on how to set
\fIcore\&.abbrev\fR\&.
.RE
.PP
\fIdiff\-options\fR (string)
.RS 4
A space separate string of diff options to use in the diff view\&. git\-show(1) is used for formatting and always passes \-\-patch\-with\-stat\&. This option overrides any options specified in the TIG_DIFF_OPTS environment variable (described in
\fBtig\fR(1)), but is itself overridden by diff flags given on the command line invocation\&.
.RE
.PP
\fIblame\-options\fR (string)
.RS 4
A space separated string of extra blame options\&. Can be used for telling git\-blame(1) how to detect the origin of lines\&. The value is ignored when tig is started in blame mode and given blame options on the command line\&.
.RE
.PP
\fIline\-graphics\fR (mixed) [ "ascii" | "default" | "utf\-8" | bool]
.RS 4
What type of character graphics for line drawing\&.
.RE
.PP
\fIline\-number\-interval\fR (int)
.RS 4
Interval between line numbers\&. Note, you have to toggle on line numbering with "\&."\&. The default is to number every fifth line\&.
.RE
.PP
\fIhorizontal\-scroll\fR (mixed)
.RS 4
Interval to scroll horizontally in each step\&. Can be specified either as the number of columns, e\&.g\&.
\fI5\fR, or as a percentage of the view width, e\&.g\&.
\fI33%\fR, where the maximum is 100%\&. For percentages it is always ensured that at least one column is scrolled\&. The default is to scroll
\fI50%\fR
of the view width\&.
.RE
.PP
\fIread\-git\-colors\fR (bool)
.RS 4
Whether to read git\(cqs color settings\&. True by default\&.
.RE
.PP
\fIshow\-author\fR (mixed) ["full", "abbreviated" | "email" | "email\-user" | bool]
.RS 4
How to display author names\&. If set to "abbreviated" author initials will be shown\&. Can be toggled\&.
.RE
.PP
\fIshow\-filename\fR (mixed) ["auto" | "always" | bool]
.RS 4
When to display file names\&. If set to "auto" file names are shown only when needed, e\&.g\&. when running: tig blame \-C <file>\&.
.RE
.PP
\fIshow\-date\fR (mixed) ["relative" | "short" | "default" | "local" | bool]
.RS 4
Whether and how to show date\&. If set to "relative" a relative date will be used, e\&.g\&. "2 minutes ago"\&. If set to "short" no time information is shown\&. If set to "local", localtime(3) is used\&. Can be toggled\&.
.RE
.PP
\fIshow\-notes\fR (mixed) [note reference | bool]
.RS 4
Whether to show notes for a commit\&. When set to a note reference the reference is passed to
git show \-\-notes=\&. Notes are enabled by default\&.
.RE
.PP
\fIshow\-refs\fR (bool)
.RS 4
Whether to show references (branches, tags, and remotes) in the main view on start\-up\&. Can be toggled\&.
.RE
.PP
\fIshow\-id\fR (bool)
.RS 4
Whether to show commit IDs in the main view\&. Disabled by default\&. Can be toggled\&. See also
\fIid\-width\fR
option\&.
.RE
.PP
\fItitle\-overflow\fR (mixed) [bool | int]
.RS 4
Whether to highlight text in commit titles exceeding a given width\&. When set to a boolean, it enables/disables the highlighting using the default width of 50 character\&. When set to an int, the assigned value is used as the maximum character width\&.
.RE
.PP
\fIshow\-rev\-graph\fR (bool)
.RS 4
Whether to show revision graph in the main view on start\-up\&. Can be toggled\&. See also line\-graphics options\&.
.RE
.PP
\fIshow\-changes\fR (bool)
.RS 4
Whether to show staged and unstaged changes in the main view\&. Can be toggled\&.
.RE
.PP
\fIshow\-line\-numbers\fR (bool)
.RS 4
Whether to show line numbers\&. Can be toggled\&.
.RE
.PP
\fIvertical\-split\fR (bool)
.RS 4
Whether to split the view horizontally or vertically\&.
.RE
.PP
\fIsplit\-view\-height\fR (mixed)
.RS 4
Height of the lower view in a split view\&. Can be specified either as the number of rows, e\&.g\&.
\fI5\fR, or as a percentage of the view height, e\&.g\&.
\fI80%\fR, where the maximum is 100%\&. It is always ensured that the smaller of the views is at least four rows high\&. The default is a view height of
\fI66%\fR\&.
.RE
.PP
\fIstatus\-untracked\-dirs\fR (bool)
.RS 4
Show untracked directories contents in the status view (analog to
git ls\-files \-\-directory
option)\&. On by default\&.
.RE
.PP
\fItab\-size\fR (int)
.RS 4
Number of spaces per tab\&. The default is 8 spaces\&.
.RE
.PP
\fIdiff\-context\fR (int)
.RS 4
Number of context lines to show for diffs\&.
.RE
.PP
\fIignore\-space\fR (mixed) ["no" | "all" | "some" | "at\-eol" | bool]
.RS 4
Ignore space changes in diff view\&. By default no space changes are ignored\&. Changing this to "all", "some" or "at\-eol" is equivalent to passing "\-\-ignore\-all\-space", "\-\-ignore\-space" or "\-\-ignore\-space\-at\-eol" respectively to
git diff
or
git show\&.
.RE
.PP
\fIcommit\-order\fR (mixed) ["default" | "topo" | "date" | "reverse" | bool]
.RS 4
Commit ordering using the default (chronological reverse) order, topological order, date order or reverse order\&. The default order is used when the option is set to false, and topo order when set to true\&.
.RE
.PP
\fIignore\-case\fR (bool)
.RS 4
Ignore case in searches\&. By default, the search is case sensitive\&.
.RE
.PP
\fIwrap\-lines\fR (bool)
.RS 4
Wrap long lines\&. By default, lines are not wrapped\&. Not compatible with line numbers enabled\&.
.RE
.PP
\fIfocus\-child\fR (bool)
.RS 4
Whether to focus the child view when it is opened\&. When disabled the focus will remain in the parent view, avoiding reloads of the child view when navigating the parent view\&. True by default\&.
.RE
.PP
\fIeditor\-line\-number\fR (bool)
.RS 4
Whether to pass the selected line number to the editor command\&. The line number is passed as
+<line\-number>
in front of the file name\&. Example:
vim +10 tig\&.c
.RE
.SH "BIND COMMAND"
.sp
Using bind commands keys can be mapped to an action when pressed in a given key map\&. The syntax is:
.sp
.if n \{\
.RS 4
.\}
.nf
\fBbind\fR \fIkeymap\fR \fIkey\fR \fIaction\fR
.fi
.if n \{\
.RE
.\}
.sp
.sp
Examples:
.sp
.if n \{\
.RS 4
.\}
.nf
# A few keybindings
bind main w scroll\-line\-up
bind main s scroll\-line\-down
bind main space enter
bind diff a previous
bind diff d next
bind diff b move\-first\-line
# An external command to update from upstream
bind generic F !git fetch
.fi
.if n \{\
.RE
.\}
.sp
.sp
Or in the git configuration files:
.sp
.if n \{\
.RS 4
.\}
.nf
[tig "bind"]
        # \*(Aqunbind\*(Aq the default quit key binding
        main = Q none
        # Cherry\-pick current commit onto current branch
        generic = C !git cherry\-pick %(commit)
.fi
.if n \{\
.RE
.\}
.sp
.sp
Keys are mapped by first searching the keybindings for the current view, then the keybindings for the \fBgeneric\fR keymap, and last the default keybindings\&. Thus, the view keybindings shadow the generic keybindings which Shadow the built\-in keybindings\&.
.PP
Keymaps
.RS 4
Valid keymaps are:
\fBmain\fR,
\fBdiff\fR,
\fBlog\fR,
\fBhelp\fR,
\fBpager\fR,
\fBstatus\fR,
\fBstage\fR,
\fBtree\fR,
\fBblob\fR,
\fBblame\fR,
\fBbranch\fR, and
\fBgeneric\fR\&. Use
\fBgeneric\fR
to set key mapping in all keymaps\&.
.RE
.PP
Key values
.RS 4
Key values should never be quoted\&. Use either the ASCII value or one of the following symbolic key names\&. Symbolic key names are case insensitive, Use
\fBHash\fR
to bind to the
#
key, since the hash mark is used as a comment character\&.
.RE
.sp
\fBEnter\fR, \fBSpace\fR, \fBBackspace\fR, \fBTab\fR, \fBEscape\fR, \fBLeft\fR, \fBRight\fR, \fBUp\fR, \fBDown\fR, \fBInsert\fR, \fBDelete\fR, \fBHash\fR, \fBHome\fR, \fBEnd\fR, \fBPageUp\fR, \fBPageDown\fR, \fBF1\fR, \fBF2\fR, \fBF3\fR, \fBF4\fR, \fBF5\fR, \fBF6\fR, \fBF7\fR, \fBF8\fR, \fBF9\fR, \fBF10\fR, \fBF11\fR, \fBF12\fR\&.
.sp
To add a key mapping that uses the Ctrl key, use a ^ prefix in your mapping\&. For example, Ctrl\-f could be mapped to \fBscroll\-page\-down\fR with the following line:
.sp
bind main ^f scroll\-page\-down
.PP
Action names
.RS 4
Valid action names are described below\&. Note, all names are case\-insensitive, and you may use
\fI\-\fR,
\fI_\fR, and
\fI\&.\fR
interchangeably, e\&.g\&. "view\-main", "View\&.Main", and "VIEW_MAIN" are the same\&.
.RE
.SS "Actions"
.sp
Apart from the action names listed below, all actions starting with a \fI!\fR or \fI:\fR are treated specially\&.
.sp
Actions beginning with a \fI:\fR will run an internal tig command\&. These internal commands are those which you put in a configuration file or type at the tig prompt\&. As an example, "bind generic S :source \&.tigrc" will source a \&.tigrc file in the current directory when \fIS\fR is pressed\&.
.sp
Actions beginning with a \fI!\fR will be available as an external command\&. External commands can contain variable names that will be substituted before the command is run\&. Valid variable names are:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&Browsing state variables
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
%(head)
T}:T{
.sp
The currently viewed \fIhead\fR ID\&. Defaults to HEAD
T}
T{
.sp
%(commit)
T}:T{
.sp
The currently selected commit ID\&.
T}
T{
.sp
%(blob)
T}:T{
.sp
The currently selected blob ID\&.
T}
T{
.sp
%(branch)
T}:T{
.sp
The currently selected branch name\&.
T}
T{
.sp
%(stash)
T}:T{
.sp
The currently selected stash name\&.
T}
T{
.sp
%(directory)
T}:T{
.sp
The current directory path in the tree view; empty for the root directory\&.
T}
T{
.sp
%(file)
T}:T{
.sp
The currently selected file\&.
T}
T{
.sp
%(ref)
T}:T{
.sp
The reference given to blame or HEAD if undefined\&.
T}
T{
.sp
%(revargs)
T}:T{
.sp
The revision arguments passed on the command line\&.
T}
T{
.sp
%(fileargs)
T}:T{
.sp
The file arguments passed on the command line\&.
T}
T{
.sp
%(diffargs)
T}:T{
.sp
The diff options passed on the command line\&.
T}
T{
.sp
%(prompt)
T}:T{
.sp
Prompt for the argument value\&.
T}
.TE
.sp 1
.sp
As an example, the following external command will save the current commit as a patch file: "!git format\-patch \-1 %(commit)"\&. If your external command requires use of dynamic features, such as subshells, expansion of environment variables and process control, this can be achieved by using a shell command:
.PP
\fBExample\ \&1.\ \&Configure a binding in ~/.tigrc to put a commit ID in the clipboard.\fR
.sp
.if n \{\
.RS 4
.\}
.nf
bind generic I !@sh \-c "echo \-n %(commit) | xclip \-selection c"
.fi
.if n \{\
.RE
.\}
.sp

.sp
Or by using a combination of git aliases and tig external commands\&. The following example entries can be put in either the \&.gitconfig or \&.git/config file:
.PP
\fBExample\ \&2.\ \&Git configuration which binds tig keys to git command aliases.\fR
.sp
.if n \{\
.RS 4
.\}
.nf
[alias]
        gitk\-bg = !"gitk HEAD \-\-not $(git rev\-parse \-\-remotes) &"
        publish = !"for i in origin public; do git push $i; done"
[tig "bind"]
        # @\-prefix means that the console output will not be shown\&.
        generic = V !@git gitk\-bg
        generic = > !git publish
.fi
.if n \{\
.RE
.\}
.sp

.sp
By default, commands are run in the foreground with their console output shown\&. For different behavior, commands can be prefixed with one or more of the following control flags to specify how it should be executed:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&2.\ \&External command control flags
.TS
tab(:);
lt lt
lt lt
lt lt.
T{
.sp
@
T}:T{
.sp
Run the command in the background with no output\&.
T}
T{
.sp
?
T}:T{
.sp
Prompt the user before executing the command\&.
T}
T{
.sp
<
T}:T{
.sp
Exit tig after executing the command\&.
T}
.TE
.sp 1
.sp
Control flags can be combined, e\&.g\&. "!?<git commit" will prompt whether to execute the command and will exit tig after completion\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&3.\ \&View switching
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
view\-main
T}:T{
.sp
Show main view
T}
T{
.sp
view\-diff
T}:T{
.sp
Show diff view
T}
T{
.sp
view\-log
T}:T{
.sp
Show log view
T}
T{
.sp
view\-tree
T}:T{
.sp
Show tree view
T}
T{
.sp
view\-blob
T}:T{
.sp
Show blob view
T}
T{
.sp
view\-blame
T}:T{
.sp
Show blame view
T}
T{
.sp
view\-branch
T}:T{
.sp
Show branch view
T}
T{
.sp
view\-status
T}:T{
.sp
Show status view
T}
T{
.sp
view\-stage
T}:T{
.sp
Show stage view
T}
T{
.sp
view\-pager
T}:T{
.sp
Show pager view
T}
T{
.sp
view\-help
T}:T{
.sp
Show help page
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&4.\ \&View manipulation
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
enter
T}:T{
.sp
Enter current line and scroll
T}
T{
.sp
next
T}:T{
.sp
Move to next
T}
T{
.sp
previous
T}:T{
.sp
Move to previous
T}
T{
.sp
parent
T}:T{
.sp
Move to parent
T}
T{
.sp
view\-next
T}:T{
.sp
Move focus to next view
T}
T{
.sp
refresh
T}:T{
.sp
Reload and refresh view
T}
T{
.sp
maximize
T}:T{
.sp
Maximize the current view
T}
T{
.sp
view\-close
T}:T{
.sp
Close the current view
T}
T{
.sp
quit
T}:T{
.sp
Close all views and quit
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&5.\ \&View specific actions
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
status\-update
T}:T{
.sp
Update file status
T}
T{
.sp
status\-merge
T}:T{
.sp
Resolve unmerged file
T}
T{
.sp
stage\-update\-line
T}:T{
.sp
Stage single line
T}
T{
.sp
stage\-next
T}:T{
.sp
Find next chunk to stage
T}
T{
.sp
diff\-context\-up
T}:T{
.sp
Increase the diff context
T}
T{
.sp
diff\-context\-down
T}:T{
.sp
Decrease the diff context
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&6.\ \&Cursor navigation
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
move\-up
T}:T{
.sp
Move cursor one line up
T}
T{
.sp
move\-down
T}:T{
.sp
Move cursor one line down
T}
T{
.sp
move\-page\-down
T}:T{
.sp
Move cursor one page down
T}
T{
.sp
move\-page\-up
T}:T{
.sp
Move cursor one page up
T}
T{
.sp
move\-first\-line
T}:T{
.sp
Move cursor to first line
T}
T{
.sp
move\-last\-line
T}:T{
.sp
Move cursor to last line
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&7.\ \&Scrolling
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
scroll\-line\-up
T}:T{
.sp
Scroll one line up
T}
T{
.sp
scroll\-line\-down
T}:T{
.sp
Scroll one line down
T}
T{
.sp
scroll\-page\-up
T}:T{
.sp
Scroll one page up
T}
T{
.sp
scroll\-page\-down
T}:T{
.sp
Scroll one page down
T}
T{
.sp
scroll\-first\-col
T}:T{
.sp
Scroll to the first column
T}
T{
.sp
scroll\-left
T}:T{
.sp
Scroll one column left
T}
T{
.sp
scroll\-right
T}:T{
.sp
Scroll one column right
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&8.\ \&Searching
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt.
T{
.sp
search
T}:T{
.sp
Search the view
T}
T{
.sp
search\-back
T}:T{
.sp
Search backwards in the view
T}
T{
.sp
find\-next
T}:T{
.sp
Find next search match
T}
T{
.sp
find\-prev
T}:T{
.sp
Find previous search match
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&9.\ \&Misc
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
prompt
T}:T{
.sp
Bring up the prompt
T}
T{
.sp
screen\-redraw
T}:T{
.sp
Redraw the screen
T}
T{
.sp
screen\-resize
T}:T{
.sp
Resize the screen
T}
T{
.sp
show\-version
T}:T{
.sp
Show version information
T}
T{
.sp
stop\-loading
T}:T{
.sp
Stop all loading views
T}
T{
.sp
options
T}:T{
.sp
Open options menu
T}
T{
.sp
toggle\-lineno
T}:T{
.sp
Toggle line numbers
T}
T{
.sp
toggle\-date
T}:T{
.sp
Toggle date display
T}
T{
.sp
toggle\-author
T}:T{
.sp
Toggle author display
T}
T{
.sp
toggle\-filename
T}:T{
.sp
Toggle file name display
T}
T{
.sp
toggle\-rev\-graph
T}:T{
.sp
Toggle revision graph visualization
T}
T{
.sp
toggle\-graphic
T}:T{
.sp
Toggle (line) graphics mode
T}
T{
.sp
toggle\-refs
T}:T{
.sp
Toggle reference display
T}
T{
.sp
toggle\-files
T}:T{
.sp
Toggle file filtering for the diff and main views
T}
T{
.sp
edit
T}:T{
.sp
Open in editor
T}
T{
.sp
none
T}:T{
.sp
Do nothing
T}
.TE
.sp 1
.SH "COLOR COMMAND"
.sp
Color commands control highlighting and the user interface styles\&. If your terminal supports color, these commands can be used to assign foreground and background combinations to certain areas\&. Optionally, an attribute can be given as the last parameter\&. The syntax is:
.sp
.if n \{\
.RS 4
.\}
.nf
\fBcolor\fR \fIarea\fR \fIfgcolor\fR \fIbgcolor\fR \fI[attributes]\fR
.fi
.if n \{\
.RE
.\}
.sp
.sp
Examples:
.sp
.if n \{\
.RS 4
.\}
.nf
# Override the default terminal colors to white on black\&.
color default           white   black
# Diff colors
color diff\-header       yellow  default
color diff\-index        blue    default
color diff\-chunk        magenta default
color "Reported\-by:"    green   default
.fi
.if n \{\
.RE
.\}
.sp
.sp
Or in the git configuration files:
.sp
.if n \{\
.RS 4
.\}
.nf
[tig "color"]
        # A strange looking cursor line
        cursor          red     default underline
        # UI colors
        title\-blur      white   blue
        title\-focus     white   blue    bold
.fi
.if n \{\
.RE
.\}
.sp
.PP
Area names
.RS 4
Can be either a built\-in area name or a custom quoted string\&. The latter allows custom color rules to be added for lines matching a quoted string\&. Valid built\-in area names are described below\&. Note, all names are case\-insensitive, and you may use
\fI\-\fR,
\fI_\fR, and
\fI\&.\fR
interchangeably, e\&.g\&. "Diff\-Header", "DIFF_HEADER", and "diff\&.header" are the same\&.
.RE
.PP
Color names
.RS 4
Valid colors include:
\fBwhite\fR,
\fBblack\fR,
\fBgreen\fR,
\fBmagenta\fR,
\fBblue\fR,
\fBcyan\fR,
\fByellow\fR,
\fBred\fR,
\fBdefault\fR\&. Use
\fBdefault\fR
to refer to the default terminal colors, for example, to keep the background transparent when you are using a terminal with a transparent background\&.
.sp
Colors can also be specified using the keywords
\fBcolor0\fR,
\fBcolor1\fR, \&...,
\fBcolorN\-1\fR
(where
\fBN\fR
is the number of colors supported by your terminal)\&. This is useful when you remap the colors for your display or want to enable colors supported by 88\-color and 256\-color terminals\&. Note that the
\fIcolor\fR
prefix is optional\&. If you prefer, you can specify colors directly by their numbers
\fB0\fR,
\fB1\fR, \&...,
\fBN\-1\fR
instead, just like in the configuration file of Git\&.
.RE
.PP
Attribute names
.RS 4
Valid attributes include:
\fBnormal\fR,
\fBblink\fR,
\fBbold\fR,
\fBdim\fR,
\fBreverse\fR,
\fBstandout\fR, and
\fBunderline\fR\&. Note, not all attributes may be supported by the terminal\&.
.RE
.SS "UI colors"
.sp
The colors and attributes to be used for the text that is not highlighted or that specify the use of the default terminal colors can be controlled by setting the \fBdefault\fR color option\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&10.\ \&General
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
default
T}:T{
.sp
Override default terminal colors (see above)\&.
T}
T{
.sp
cursor
T}:T{
.sp
The cursor line\&.
T}
T{
.sp
status
T}:T{
.sp
The status window showing info messages\&.
T}
T{
.sp
title\-focus
T}:T{
.sp
The title window for the current view\&.
T}
T{
.sp
title\-blur
T}:T{
.sp
The title window of any backgrounded view\&.
T}
T{
.sp
delimiter
T}:T{
.sp
Delimiter shown for truncated lines\&.
T}
T{
.sp
line\-number
T}:T{
.sp
Line numbers\&.
T}
T{
.sp
id
T}:T{
.sp
The commit ID\&.
T}
T{
.sp
date
T}:T{
.sp
The commit date\&.
T}
T{
.sp
author
T}:T{
.sp
The commit author\&.
T}
T{
.sp
mode
T}:T{
.sp
The file mode holding the permissions and type\&.
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&11.\ \&Main view colors
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
graph\-commit
T}:T{
.sp
The commit dot in the revision graph\&.
T}
T{
.sp
palette\-[0\-6]
T}:T{
.sp
7 different colors, used for distinguishing branches or commits\&. example: palette\-0 = red
T}
T{
.sp
main\-commit
T}:T{
.sp
The commit comment\&.
T}
T{
.sp
main\-head
T}:T{
.sp
Label of the current branch\&.
T}
T{
.sp
main\-remote
T}:T{
.sp
Label of a remote\&.
T}
T{
.sp
main\-tracked
T}:T{
.sp
Label of the remote tracked by the current branch\&.
T}
T{
.sp
main\-tag
T}:T{
.sp
Label of a signed tag\&.
T}
T{
.sp
main\-local\-tag
T}:T{
.sp
Label of a local tag\&.
T}
T{
.sp
main\-ref
T}:T{
.sp
Label of any other reference\&.
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&12.\ \&Status view
.TS
tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
.sp
stat\-head
T}:T{
.sp
The "On branch"\-line\&.
T}
T{
.sp
stat\-section
T}:T{
.sp
Status section titles,
T}
T{
.sp
stat\-staged
T}:T{
.sp
Status flag of staged files\&.
T}
T{
.sp
stat\-unstaged
T}:T{
.sp
Status flag of unstaged files\&.
T}
T{
.sp
stat\-untracked
T}:T{
.sp
Status flag of untracked files\&.
T}
.TE
.sp 1
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&13.\ \&Tree view
.TS
tab(:);
lt lt
lt lt
lt lt.
T{
.sp
tree\-head
T}:T{
.sp
The "Directory /"\-line
T}
T{
.sp
tree\-dir
T}:T{
.sp
The directory name\&.
T}
T{
.sp
tree\-file
T}:T{
.sp
The file name\&.
T}
.TE
.sp 1
.SS "Highlighting"
.PP
Diff markup
.RS 4
Options concerning diff start, chunks and lines added and deleted\&.
.RE
.sp
\fBdiff\-header\fR, \fBdiff\-chunk\fR, \fBdiff\-add\fR, \fBdiff\-del\fR
.PP
Enhanced git diff markup
.RS 4
Extra diff information emitted by the git diff machinery, such as mode changes, rename detection, and similarity\&.
.RE
.sp
\fBdiff\-oldmode\fR, \fBdiff\-newmode\fR, \fBdiff\-copy\-from\fR, \fBdiff\-copy\-to\fR, \fBdiff\-rename\-from\fR, \fBdiff\-rename\-to\fR, \fBdiff\-deleted\-file\-mode\fR, \fBdiff\-similarity\fR, \fBdiff\-dissimilarity\fR \fBdiff\-tree\fR, \fBdiff\-index\fR, \fBdiff\-stat\fR
.PP
Pretty print commit headers
.RS 4
Commit diffs and the revision logs are usually formatted using pretty printed headers , unless
\-\-pretty=raw
was given\&. This includes lines, such as merge info, commit ID, and author and committer date\&.
.RE
.sp
\fBpp\-author\fR, \fBpp\-commit\fR, \fBpp\-merge\fR, \fBpp\-date\fR, \fBpp\-adate\fR, \fBpp\-cdate\fR, \fBpp\-refs\fR
.PP
Raw commit header
.RS 4
Usually shown when
\-\-pretty=raw
is given, however
\fIcommit\fR
is pretty much omnipresent\&.
.RE
.sp
\fBcommit\fR, \fBparent\fR, \fBtree\fR, \fBauthor\fR, \fBcommitter\fR
.PP
Commit message
.RS 4

Signed\-off\-by,
Acked\-by,
Reviewed\-by
and
Tested\-by
lines are colorized\&. Characters in the commit title exceeding a predefined width can be highlighted\&.
.RE
.sp
\fBsignoff\fR, \fBacked\fR, \fBreviewed\fR, \fBtested\fR, \fBoverflow\fR
.PP
Tree markup
.RS 4
Colors for information of the tree view\&.
.RE
.sp
\fBtree\-dir\fR, \fBtree\-file\fR
.SH "SOURCE COMMAND"
.sp
Source commands make it possible to read additional configuration files\&. Sourced files are included in\-place, meaning when a \fIsource\fR command is encountered the file will be immediately read\&. Any commands later in the current configuration file will take precedence\&. The syntax is:
.sp
.if n \{\
.RS 4
.\}
.nf
\fBsource\fR \fIpath\fR
.fi
.if n \{\
.RE
.\}
.sp
.sp
Examples:
.sp
.if n \{\
.RS 4
.\}
.nf
source ~/\&.tig/colorscheme\&.tigrc
source ~/\&.tig/keybindings\&.tigrc
.fi
.if n \{\
.RE
.\}
.sp
.SH "COPYRIGHT"
.sp
Copyright (c) 2006\-2012 Jonas Fonseca <\m[blue]\fBfonseca@diku\&.dk\fR\m[]\&\s-2\u[1]\d\s+2>
.sp
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version\&.
.SH "SEE ALSO"
.sp
\fBtig\fR(1), \fBtigmanual\fR(7), git\-config(1), and the \m[blue]\fBtig manual\fR\m[]\&\s-2\u[2]\d\s+2\&.
.SH "NOTES"
.IP " 1." 4
fonseca@diku.dk
.RS 4
\%mailto:fonseca@diku.dk
.RE
.IP " 2." 4
tig manual
.RS 4
\%http://jonas.nitro.dk/tig/manual.html
.RE
