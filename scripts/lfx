#!/bin/bash
# lfx: xargs for lf selection, with y/n prompt to avoid mistakes.
#
# For example, use lf to build a selection,
# then exit and run
#     $ lfx rm
# to remove the files.

if [ $# -eq 0 ]
then
    # Error on no args.
    #>&2 echo "Usage: lfx command <args...>"
    #exit 1

    # Show selection on no args.
    lfs
    exit 0
fi

# Validate that the first argument
# is a command name.
# Otherwise, command echo may accidentally intepret a flag.
command_name="$1"
if [[ $command_name =~ ^\s*-.*$ ]]
then
    >&2 echo "Invalid command name \"$command_name\"."
    exit 1
fi

xargs_replace_str_mode=0
for arg in "$@"
do
    if echo "$arg" | grep -q '{}'
    then
        xargs_replace_str_mode=1
        break
    fi
done

args="$(lfs)"
XARGS="xargs -0"

if [ $xargs_replace_str_mode -eq 1 ]
then
    echo "$args" | tr '\n' '\0' | $XARGS -i echo "$@"
else
    echo "$args" | tr '\n' '\0' | $XARGS echo "$@"
fi

#https://stackoverflow.com/questions/3231804/in-bash-how-to-add-are-you-sure-y-n-to-any-command-or-alias
>&2 read -r -p "Are you sure? [y/N] " response
case "$response" in
    [yY][eE][sS]|[yY]) 
        ;;
    *)
        >&2 echo "aborted"
        exit 1
        ;;
esac
if [ $xargs_replace_str_mode -eq 1 ]
then
    echo "$args" | tr '\n' '\0' | $XARGS -i "$@"
else
    echo "$args" | tr '\n' '\0' | $XARGS "$@"
fi
