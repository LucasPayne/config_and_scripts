#!/bin/bash
# dirspace_get: Get the name of a dirspace from a path.
# Error code indicates whether the path is a dirspace.

# Option: Get the closest parent dirspace if possible.
#     e.g. if Config is a dirspace at ~/config,
#     then ~/config/scripts will resolve to Config with this option.
option_get_parent_dirspace=0
if [ $# -eq 2 ] && [[ "$1" =~ (-p|--parent) ]]
then
    option_get_parent_dirspace=1
    shift
fi

if [ $# -ne 1 ]
then
    >&2 echo "give good args"
    exit 1
fi
arg_path="$1"
if [ ! -d "$arg_path" ]
then
    >&2 echo "Not a directory"
    exit 1
fi
input_path="$(realpath "$arg_path")"

lines="$(cat ~/config/dirspace/dirspaces.txt | grep -v '^#' | grep -v '^\s*$')"
num="$(echo "$lines" | wc -l)"

mapfile -t paths < <(echo "$lines" | awk -F" -- " '{print $1}')
mapfile -t names < <(echo "$lines" | awk -F" -- " '{print $2}')

function match_path()
{
    local path="$1"
    if [ ! -d "$path" ]
    then
        # Skip silently.
        return 1
    fi
    path="$(realpath "$path")"
    if [ $option_get_parent_dirspace -eq 1 ]
    then
        [[ "$input_path/" =~ ^$path/ ]]
        return $?
    else
        test "$path" = "$input_path"
        return $?
    fi
}

name=""
for ((i=0 ; i<num; i++))
do
    path="${paths[i]}"
    # Expand the leading ~ if there.
    path="${path/#\~/$HOME}"

    if echo "$path" | grep -q "{}$" 2>/dev/null
    then
        expanding_path="${path::-2}"
        if [ ! -d "$expanding_path" ]
        then
            # Skip silently.
            continue  path
        fi
        expanding_path="$(realpath "$expanding_path")"
        while read -r path
        do
            if match_path "$path"
            then
                expanding_name="${names[i]}"
                subdir="$(basename "$path")"
                expanding_name="${expanding_name//\{\}/$subdir}"
                expanding_name="${expanding_name//\{capitalize\}/${subdir^}}"
                expanding_name="${expanding_name//\{upper\}/${subdir^^}}"
                expanding_name="${expanding_name//\{lower\}/${subdir,,}}"
                echo "$expanding_name"
                exit 0
            fi
        done < <(fd . -td -d1 "${path::-2}")
    else
        if match_path "$path"
        then
            echo "${names[i]}"
            exit 0
        fi
    fi
done

# Dirspace not found
# Fail.
exit 1
