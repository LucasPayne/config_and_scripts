#!/bin/bash
# dirspace_init:

error ()
{
    >&2 echo "$1"
    exit 1
}

# Make sure runtime (xdg share) directories are available.
RUNTIME_DIR=~/.local/share/dirspace
if [ ! -d "$RUNTIME_DIR" ]
then
    mkdir -p "$RUNTIME_DIR" 2>/dev/null || error "Failed to create dirspace runtime directory."
fi
if [ ! -d "$RUNTIME_DIR/sessions" ]
then
    mkdir -p "$RUNTIME_DIR/sessions" 2>/dev/null || error "Failed to create dirspace sessions directory."
fi

# Create session runtime directory.
DIRSPACE_RUNTIME="$(mktemp -d --tmpdir="$RUNTIME_DIR/sessions" XXXX)"
[[ -d "$DIRSPACE_RUNTIME" ]] || error "Failed to create session runtime directory."
# Create a runtime directory for this session's vim instances.
mkdir "$DIRSPACE_RUNTIME/vim"
# Create a runtime directory for the slots symlinks.
# These are symlinks for numbered bookmarks for open dirspaces, similar to tabs in vim.
mkdir "$DIRSPACE_RUNTIME/slots"

# Initialize empty status bar.
STATUS_BAR="$DIRSPACE_RUNTIME/tabline_dirspace_status_bar"
# It consists of one empty line.
echo > "$STATUS_BAR"

DIRSPACE_SESSION_ID=$(basename "$DIRSPACE_RUNTIME")
DIRSPACE_SCREEN_ID=dirspace.$DIRSPACE_SESSION_ID

# -m: Create even if STY exists (e.g. in a screen session).
env \
    -u STY \
    -u DIRSPACE_VIM_RUNTIME \
    -u VIM_SERVERNAME \
    DIRSPACE_RUNTIME="$DIRSPACE_RUNTIME" \
    DIRSPACE_SESSION_ID="$DIRSPACE_SESSION_ID" \
    DIRSPACE_SCREEN_ID="$DIRSPACE_SCREEN_ID" \
    screen -m -S "$DIRSPACE_SCREEN_ID" -c ~/config/dirspace/dirspace_screenrc

rm -r "$DIRSPACE_RUNTIME"
