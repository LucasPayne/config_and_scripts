#!/bin/bash

lfs ()
{
    local lf_runtime_dir="$XDG_RUNTIME_DIR/lf"
    local selection_file="$lf_runtime_dir/primary_selection"

    if [ ! -f "$selection_file" ]
    then
        >&2 "error: no selection file"
        return 1
    fi

    if [ ! -t 0 ] && ( [ "$#" -eq 0 ] || [ ! "$1" = "-o" ] )
    then
        # Input from a pipe.
        # Interpret stdin as selections.
        # Input from a pipe is ignored with the -o flag, which forces printing output
        # instead, as it would interactively with no pipe input.
        local append_mode
        if [ $# -eq 1 ] && [ "$1" = -a ]
        then
            # append selections
            append_mode=1
        else
            # overwrite selections
            append_mode=0
        fi

        local selection
        if [ $append_mode -eq 1 ]
        then
            selection="$(cat "$selection_file")"
        else
            selection=""
        fi

        while read -r line
        do
            if [ ! -e "$line" ]
            then
                >&2 echo "File \"$line\" doesn't exist, ignoring."
            else
                local out_line="$(realpath "$line")"
                selection="$selection"$'\n'"$out_line"
            fi
        done < <(cat)

        # Write to selection file.
        echo "$selection" > "$selection_file"
        
        exit 0
    fi

    if [ $# -eq 0 ]
    then
        if [ -s "$selection_file" ]
        then
            # Default without pipe input: Output selection file.
            cat "$selection_file"
        fi
    elif [ $# -eq 1 ]
    then
        if [ "$1" = "-c" ]
        then
            # Clear selection file
            >"$selection_file"
        fi
        if [ "$1" = "-o" ]
        then
            # Output selection file.
            if [ -s "$selection_file" ]
            then
                cat "$selection_file"
            fi
        fi
    else
        >&2 echo "bad args"
        return 1
    fi
}

lfs "$@"

